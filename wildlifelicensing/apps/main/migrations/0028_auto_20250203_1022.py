# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2025-02-03 02:22
from __future__ import unicode_literals

from django.db import migrations

def populate_base_ledger_licence_type_replaced_by(apps, schema_editor):
    BaseLicenceType = apps.get_model('wl_main', 'BaseLicenceType')
    LicenceType = apps.get_model('licence', 'LicenceType')

    # The replaced by instance is set in a seperate migration as the instances
    # may not exist at the time of the first migration
    for base_licence_type in BaseLicenceType.objects.all():
        licence_type = LicenceType.objects.get(id=base_licence_type.pk)
        if not licence_type.replaced_by_id:
            continue

        replaced_by_base_license_type = BaseLicenceType.objects.get(id=licence_type.replaced_by_id)
        base_licence_type.replaced_by = replaced_by_base_license_type
        base_licence_type.save()

def copy_ledger_licenses(apps, schema_editor):
    BaseLicence = apps.get_model('wl_main', 'BaseLicence')
    Licence = apps.get_model('licence', 'Licence')

    for licence in Licence.objects.all():
        BaseLicence.objects.create(
            pk=licence.pk,
            holder=licence.holder,
            issuer=licence.issuer,
            licence_type_id=licence.licence_type_id,
            licence_number=licence.licence_number,
            licence_sequence=licence.licence_sequence,
            issue_date=licence.issue_date,
            start_date=licence.start_date,
            end_date=licence.end_date,
            is_renewable=licence.is_renewable
        )

class Migration(migrations.Migration):

    dependencies = [
        ('wl_main', '0027_auto_20250203_1011'),
    ]

    operations = [
        migrations.RunPython(populate_base_ledger_licence_type_replaced_by),
        migrations.RunPython(copy_ledger_licenses),
    ]
